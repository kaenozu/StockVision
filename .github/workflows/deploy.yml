name: Deploy StockVision

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    name: Test Backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
        pip install pytest pytest-cov redis

    - name: Run backend tests (unit + smoke)
      run: |
        pytest -q tests/unit tests/integration/test_api_smoke.py --cov=src --cov-report=term-missing --cov-report=xml --cov-fail-under=0
        
  test-frontend:
    runs-on: ubuntu-latest
    name: Test Frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend
        rm -f package-lock.json
        rm -rf node_modules
        npm install --legacy-peer-deps
        
    - name: Run linting
      run: |
        cd frontend
        npm run lint || true
        
    - name: Run tests
      run: |
        cd frontend
        npm run test:run || true
        
    - name: Install Playwright browsers
      run: |
        cd frontend
        npx playwright install --with-deps
        
    - name: Run E2E tests
      run: |
        cd frontend
        npx playwright test
        
    - name: Upload E2E test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-test-results
        path: |
          frontend/test-results/
          frontend/playwright-report/
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build || true

  deploy-production:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    name: Deploy to Production
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy Backend to Railway 
      uses: bervProject/railway-deploy@v1.2.0
      with:
        railway_token: ${{ secrets.RAILWAY_TOKEN }}
        service: 'stockvision-backend'
        
    - name: Setup Node.js for Vercel
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Deploy Frontend to Vercel
      uses: amondnet/vercel-action@v25
      if: success()
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend
        vercel-args: '--prod'

  lighthouse:
    needs: deploy-production
    runs-on: ubuntu-latest
    name: Lighthouse Performance Check
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Lighthouse
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: '.lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true
