name: Generate and Deploy Documentation


on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    name: Generate Documentation
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Generate API documentation
      run: |
        python -c "from src.main import app
        import json
        with open('openapi.json', 'w') as f:
            json.dump(app.openapi(), f)"
        cd docs && python generate_api_docs.py

    - name: Upload generated docs
      uses: actions/upload-artifact@v4
      with:
        name: generated-docs
        path: |
          docs/api_spec_auto.md
          openapi.json

  deploy-docs:
    needs: generate-docs
    runs-on: ubuntu-latest
    name: Deploy Documentation
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v4

    - name: Download generated docs
      uses: actions/download-artifact@v4
      with:
        name: generated-docs
        path: .

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
        publish_branch: gh-pages

  build-storybook:
    runs-on: ubuntu-latest
    name: Build Storybook
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm install --legacy-peer-deps

    - name: Build Storybook
      run: |
        cd frontend
        npm run build-storybook

    - name: Upload Storybook build
      uses: actions/upload-artifact@v4
      with:
        name: storybook-build
        path: frontend/storybook-static

  deploy-storybook:
    needs: build-storybook
    runs-on: ubuntu-latest
    name: Deploy Storybook
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v4

    - name: Download Storybook build
      uses: actions/download-artifact@v4
      with:
        name: storybook-build
        path: storybook-static

    - name: Deploy to GitHub Pages (Storybook)
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./storybook-static
        publish_branch: gh-pages-storybook
        destination_dir: storybook